// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using controlestoque.Models;

#nullable disable

namespace controlestoque.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("controlestoque.Models.Cadastrousuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .HasColumnType("text")
                        .HasColumnName("Cidade");

                    b.Property<string>("Confsenha")
                        .HasColumnType("text")
                        .HasColumnName("Confirmar sua senha");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("Descrição");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("Endereco")
                        .HasColumnType("text")
                        .HasColumnName("Endereço");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Cadastrousuario");
                });

            modelBuilder.Entity("controlestoque.Models.Fornecedor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("controlestoque.Models.Produto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<decimal?>("Custo")
                        .HasColumnType("numeric");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FornecedorCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("FornecedorCodigo");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("controlestoque.Models.Produto", b =>
                {
                    b.HasOne("controlestoque.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });
#pragma warning restore 612, 618
        }
    }
}
